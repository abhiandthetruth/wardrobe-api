openapi: 3.0.0
info:
  title: Wardrobe Management API
  description: An API to manage your wardrobe digitally
  version: 1.0.0

servers:
  - url: http://api.example.com/v1

tags:
  - name: Authentication
    description: Endpoints related to user authentication.
  - name: Items
    description: Endpoints for managing wardrobe items.
  - name: Outfits
    description: Endpoints for managing outfits created from wardrobe items.
  - name: Wardrobes
    description: Endpoints for managing user's wardrobes.
  - name: Connections
    description: Endpoints for managing user connections.

paths:
  /auth/login:
    post:
      summary: Authenticate user
      description: Endpoint for user login and authentication.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_id:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized

  /items:
    get:
      summary: Get all items
      description: Get a list of all wardrobe items.
      tags:
        - Items
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '401':
          description: Unauthorized

    post:
      summary: Add a new item
      description: Create a new wardrobe item.
      tags:
        - Items
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized

  /items/{item_id}:
    get:
      summary: Get an item by ID
      description: Get a specific wardrobe item by its ID.
      tags:
        - Items
      security:
        - bearerAuth: []
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '401':
          description: Unauthorized
        '404':
          description: Item not found

    put:
      summary: Update an item
      description: Update an existing wardrobe item.
      tags:
        - Items
      security:
        - bearerAuth: []
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '404':
          description: Item not found

    delete:
      summary: Delete an item
      description: Delete a wardrobe item.
      tags:
        - Items
      security:
        - bearerAuth: []
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Item not found

  /outfits:
    get:
      summary: Get all outfits
      description: Get a list of all created outfits.
      tags:
        - Outfits
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Outfit'
        '401':
          description: Unauthorized

    post:
      summary: Add a new outfit
      description: Create a new outfit from wardrobe items.
      tags:
        - Outfits
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Outfit'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized

  /outfits/{outfitId}:
    get:
      summary: Get an outfit by ID
      description: Get a specific outfit by its ID.
      tags:
        - Outfits
      security:
        - bearerAuth: []
      parameters:
        - name: outfitId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outfit'
        '401':
          description: Unauthorized
        '404':
          description: Outfit not found

    put:
      summary: Update an outfit
      description: Update an existing outfit.
      tags:
        - Outfits
      security:
        - bearerAuth: []
      parameters:
        - name: outfitId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Outfit'
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '404':
          description: Outfit not found

    delete:
      summary: Delete an outfit
      description: Delete an existing outfit.
      tags:
        - Outfits
      security:
        - bearerAuth: []
      parameters:
        - name: outfitId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Outfit not found

  /wardrobes:
    get:
      summary: Get all wardrobes
      description: Get a list of all user's wardrobes.
      tags:
        - Wardrobes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wardrobe'
        '401':
          description: Unauthorized

    post:
      summary: Add a new wardrobe
      description: Create a new wardrobe for the user.
      tags:
        - Wardrobes
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wardrobe'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized

  /wardrobes/{wardrobe_id}:
    get:
      summary: Get a wardrobe by ID
      description: Get a specific wardrobe by its ID.
      tags:
        - Wardrobes
      security:
        - bearerAuth: []
      parameters:
        - name: wardrobe_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wardrobe'
        '401':
          description: Unauthorized
        '404':
          description: Wardrobe not found

    put:
      summary: Update a wardrobe
      description: Update an existing wardrobe.
      tags:
        - Wardrobes
      security:
        - bearerAuth: []
      parameters:
        - name: wardrobe_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wardrobe'
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '404':
          description: Wardrobe not found

    delete:
      summary: Delete a wardrobe
      description: Delete an existing wardrobe.
      tags:
        - Wardrobes
      security:
        - bearerAuth: []
      parameters:
        - name: wardrobe_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Wardrobe not found

  /connections/add:
    post:
      summary: Add a connection between users
      description: Create a connection between the current user and another user.
      tags:
        - Connections
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  format: uuid
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Wardrobe:
      type: object
      properties:
        name:
          type: string
        location:
          type: string
        items:
          type: array
          items:
            type: string
            format: uuid
    User:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        name:
          type: string
        image:
          type: string
        email_id:
          type: string
          format: email
        password:
          type: string
        connections:
          type: array
          description: A list of user_ids
          items:
            type: string
            format: uuid
        wardrobes:
          type: array
          description: A list of wardrobe_ids
          items:
            type: string
            format: uuid 
    Item:
      type: object
      properties:
        name:
          type: string
        image:
          type: string
        category:
          oneOf:
            - $ref: '#/components/schemas/Topwear'
            - $ref: '#/components/schemas/Bottomwear'
            - $ref: '#/components/schemas/Footwear'
            - $ref: '#/components/schemas/Accessory'
            - $ref: '#/components/schemas/SinglePiece'
        size:
          type: string
        material:
          type: string
        time:
          $ref: '#/components/schemas/Time'
        season:
          $ref: '#/components/schemas/Season'
        occasion:
          $ref: '#/components/schemas/Occasion'
        tags:
          type: array
          items:
            type: string
        colors:
          type: array
          items:
            type: string
    Topwear:
      type: string
      enum:
        - T-Shirts
        - Shirts
        - Sweatshirts
        - Jackets
        - Blazers
        - Kurtis
        - Kurtas
        - Tops
        - Shrugs
    Bottomwear:
      type: string
      enum:
        - Pyjamas
        - Jeans
        - Trousers
        - Skirts
        - Shorts
        - Pants
        - Plazzos
        - Salwar
        - Chudidaar
        - Track Pants
    Footwear:
      type: string
      enum:
        - Shoes
        - Sandals
        - Heels
        - Flip Flops
        - Ballerinas
        - Boots
        - Socks
    Accessory:
      type: string
      enum: 
        - Sunglasses
        - Earrings
        - Bracelets
        - Necklaces
        - Watches
        - Bags
        - Dupatta
        - Caps
        - Rings
        - Anklets
    SinglePiece:
      type: string
      enum:
        - Sarees
        - Dresses
        - Jump Suits
        - Lehnga
        - Underwears
        - Under Shirts
        - Tank Tops
        - Bras
    Time:
      type: string
      enum:
        - day
        - night
    Season:
      type: string
      enum:
        - summer
        - winter
        - spring
        - monsoon
    Occasion:
      type: string
      enum:
        - festive
        - work
        - party
        - active
        - casual
    Outfit:
      type: object
      properties:
        name:
          type: string
        time:
          $ref: '#/components/schemas/Time'
        season:
          $ref: '#/components/schemas/Season'
        occasion:
          $ref: '#/components/schemas/Occasion'
        topwears:
          type: array
          description: List of Topwear item_ids
          items:
            type: string
            format: uuid
        bottomwears:
          type: array
          description: List of Bottomwear item_ids
          items:
            type: string
            format: uuid
        accessories:
          type: array
          description: List of Accessory item_ids
          items:
            type: string
            format: uuid
        footwears:
          type: array
          description: List of Footwear item_ids
          items:
            type: string
            format: uuid
