# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Wardrobe(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, location=None, items=None):  # noqa: E501
        """Wardrobe - a model defined in OpenAPI

        :param name: The name of this Wardrobe.  # noqa: E501
        :type name: str
        :param location: The location of this Wardrobe.  # noqa: E501
        :type location: str
        :param items: The items of this Wardrobe.  # noqa: E501
        :type items: List[str]
        """
        self.openapi_types = {
            'name': str,
            'location': str,
            'items': List[str]
        }

        self.attribute_map = {
            'name': 'name',
            'location': 'location',
            'items': 'items'
        }

        self._name = name
        self._location = location
        self._items = items

    @classmethod
    def from_dict(cls, dikt) -> 'Wardrobe':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Wardrobe of this Wardrobe.  # noqa: E501
        :rtype: Wardrobe
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Wardrobe.


        :return: The name of this Wardrobe.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Wardrobe.


        :param name: The name of this Wardrobe.
        :type name: str
        """

        self._name = name

    @property
    def location(self):
        """Gets the location of this Wardrobe.


        :return: The location of this Wardrobe.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Wardrobe.


        :param location: The location of this Wardrobe.
        :type location: str
        """

        self._location = location

    @property
    def items(self):
        """Gets the items of this Wardrobe.


        :return: The items of this Wardrobe.
        :rtype: List[str]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this Wardrobe.


        :param items: The items of this Wardrobe.
        :type items: List[str]
        """

        self._items = items
